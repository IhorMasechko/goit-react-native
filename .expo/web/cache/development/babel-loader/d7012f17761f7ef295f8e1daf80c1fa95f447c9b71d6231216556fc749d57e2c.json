{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport app from \"../../firebase/config\";\nimport { getFirestore, collection, onSnapshot, where, query } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = getFirestore(app);\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userPosts = _useState4[0],\n    setUserPosts = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    commentsCount = _useState6[0],\n    setCommentsCount = _useState6[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    userId = _useSelector.userId,\n    userName = _useSelector.userName,\n    userEmail = _useSelector.userEmail;\n  console.log(userEmail);\n  var getAllPost = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        onSnapshot(collection(db, \"posts\"), function (data) {\n          var posts = data.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          });\n          setPosts(posts);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getAllPost() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getAllPost();\n    posts.forEach(function (post) {\n      getCommentsCount(post.id);\n    });\n  }, []);\n  useEffect(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.commentsCount) {\n      setCommentsCount(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, route.params.postId, route.params.commentsCount));\n      });\n    }\n  }, [route.params]);\n  var getCommentsCount = function () {\n    var _ref3 = _asyncToGenerator(function* (postId) {\n      try {\n        var commentsRef = collection(db, \"posts/\" + postId + \"/comments\");\n        var queryRef = query(commentsRef);\n        var unsubscribe = onSnapshot(queryRef, function (querySnapshot) {\n          var commentsCount = querySnapshot.docs.length;\n          setCommentsCount(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, postId, commentsCount));\n          });\n        });\n        return function () {\n          return unsubscribe();\n        };\n      } catch (error) {\n        console.log(error);\n        setCommentsCount(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, postId, 0));\n        });\n      }\n    });\n    return function getCommentsCount(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getUserPosts();\n    return function () {\n      return getUserPosts();\n    };\n  }, []);\n  var getUserPosts = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var userPostsRef = collection(db, \"posts\");\n        var queryRef = query(userPostsRef, where(\"userId\", \"==\", userId));\n        var unsubscribe = onSnapshot(queryRef, function (querySnapshot) {\n          var userPosts = querySnapshot.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          });\n          setUserPosts(userPosts);\n          if (userPosts && userPosts.length > 0) {\n            userPosts.forEach(function (post) {\n              getCommentsCount(post.id.toString());\n            });\n          }\n        });\n        return function () {\n          return unsubscribe();\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getUserPosts() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: require(\"../../assets/image/photo-BG-2x.jpg\"),\n      style: styles.image,\n      children: _jsxs(View, {\n        style: styles.wrapper,\n        children: [_jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsx(View, {\n            style: styles.imgBox,\n            children: _jsx(Image, {\n              style: styles.avatar,\n              source: require(\"../../assets/image/avatar.png\")\n            })\n          }), _jsx(View, {\n            style: styles.user,\n            children: _jsx(Text, {\n              style: styles.name,\n              children: userName\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.postsList,\n          children: _jsx(FlatList, {\n            data: userPosts,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            renderItem: function renderItem(_ref5) {\n              var item = _ref5.item;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: {\n                    uri: item.photo\n                  },\n                  style: styles.post\n                }), _jsx(View, {\n                  children: _jsx(Text, {\n                    style: styles.title,\n                    children: item.comment\n                  })\n                }), _jsxs(View, {\n                  style: styles.box,\n                  children: [_jsxs(View, {\n                    style: styles.commentWrapper,\n                    children: [_jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return navigation.navigate(\"Комментарии\", {\n                          postId: item.id\n                        });\n                      },\n                      children: _jsx(FontAwesome, {\n                        name: \"comment\",\n                        size: 24,\n                        color: \"#FF6C00\"\n                      })\n                    }), _jsx(Text, {\n                      style: styles.commentsCount,\n                      children: commentsCount[item.id] || 0\n                    })]\n                  }), _jsxs(View, {\n                    style: styles.wrapperLocation,\n                    children: [_jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return navigation.navigate(\"MapScreen\", {\n                          location: item.location\n                        });\n                      },\n                      children: _jsx(Ionicons, {\n                        name: \"location-outline\",\n                        size: 24,\n                        color: \"#BDBDBD\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return navigation.navigate(\"MapScreen\", {\n                          location: item.location\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.locationName,\n                        children: item.locationName\n                      })\n                    })]\n                  })]\n                })]\n              });\n            }\n          })\n        })]\n      })\n    })\n  });\n};\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  wrapper: {\n    marginTop: 250,\n    backgroundColor: \"#FFFFFF\",\n    paddingHorizontal: 16,\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    marginTop: 32,\n    height: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  imgBox: {\n    position: \"absolute\",\n    left: \"35%\",\n    top: \"-100%\",\n    width: 120,\n    height: 120,\n    backgroundColor: \"#E8E8E8\",\n    marginRight: 8,\n    borderRadius: 16\n  },\n  avatar: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  name: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 30,\n    lineHeight: 35,\n    color: \"#212121\"\n  },\n  postsList: {\n    marginBottom: 120\n  },\n  post: {\n    height: 240,\n    width: \"100%\",\n    borderRadius: 8\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  title: {\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\"\n  },\n  commentWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  commentsCount: {\n    ntFamily: \"RobotoRegular\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    marginLeft: 9\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  location: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\"\n  },\n  locationName: {\n    marginLeft: 4,\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    textDecorationLine: \"underline\"\n  }\n});","map":{"version":3,"names":["useEffect","useState","useSelector","Ionicons","FontAwesome","app","getFirestore","collection","onSnapshot","where","query","jsx","_jsx","jsxs","_jsxs","db","ProfileScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","userPosts","setUserPosts","_useState5","_useState6","commentsCount","setCommentsCount","_useSelector","state","auth","userId","userName","userEmail","console","log","getAllPost","_ref2","_asyncToGenerator","data","docs","map","doc","_objectSpread","id","error","apply","arguments","forEach","post","getCommentsCount","_route$params","params","prev","_defineProperty","postId","_ref3","commentsRef","queryRef","unsubscribe","querySnapshot","length","_x","getUserPosts","_ref4","userPostsRef","toString","View","style","styles","container","children","ImageBackground","source","require","image","wrapper","userInfo","imgBox","Image","avatar","user","Text","name","postsList","FlatList","keyExtractor","item","index","renderItem","_ref5","uri","photo","title","comment","box","commentWrapper","TouchableOpacity","onPress","navigate","size","color","wrapperLocation","location","locationName","StyleSheet","create","flex","resizeMode","justifyContent","marginTop","backgroundColor","paddingHorizontal","borderTopRightRadius","borderTopLeftRadius","flexDirection","height","alignItems","position","left","top","width","marginRight","borderRadius","fontFamily","fontStyle","fontSize","lineHeight","marginBottom","display","ntFamily","marginLeft","textDecorationLine"],"sources":["/Users/ihor.masechko/Documents/goit-react-native/Screens/mainScreen/ProfileScreen.jsx"],"sourcesContent":["import {\n  StyleSheet,\n  View,\n  FlatList,\n  Image,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\n\nimport app from \"../../firebase/config\";\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  where,\n  query,\n} from \"firebase/firestore\";\n\nconst db = getFirestore(app);\n\nconst ProfileScreen = ({ navigation, route }) => {\n  const [posts, setPosts] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [commentsCount, setCommentsCount] = useState({});\n  const { userId, userName, userEmail } = useSelector((state) => state.auth);\n  console.log(userEmail);\n\n  const getAllPost = async () => {\n    try {\n      onSnapshot(collection(db, \"posts\"), (data) => {\n        const posts = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n        setPosts(posts);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllPost();\n    posts.forEach((post) => {\n      getCommentsCount(post.id);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (route.params?.commentsCount) {\n      setCommentsCount((prev) => ({\n        ...prev,\n        [route.params.postId]: route.params.commentsCount,\n      }));\n    }\n  }, [route.params]);\n\n  const getCommentsCount = async (postId) => {\n    try {\n      const commentsRef = collection(db, `posts/${postId}/comments`);\n      const queryRef = query(commentsRef);\n      const unsubscribe = onSnapshot(queryRef, (querySnapshot) => {\n        const commentsCount = querySnapshot.docs.length;\n        setCommentsCount((prev) => ({ ...prev, [postId]: commentsCount }));\n      });\n      return () => unsubscribe();\n    } catch (error) {\n      console.log(error);\n      setCommentsCount((prev) => ({ ...prev, [postId]: 0 }));\n    }\n  };\n\n  useEffect(() => {\n    getUserPosts();\n    return () => getUserPosts();\n  }, []);\n\n  const getUserPosts = async () => {\n    try {\n      const userPostsRef = collection(db, \"posts\");\n      const queryRef = query(userPostsRef, where(\"userId\", \"==\", userId));\n      const unsubscribe = onSnapshot(queryRef, (querySnapshot) => {\n        const userPosts = querySnapshot.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n        setUserPosts(userPosts);\n\n        if (userPosts && userPosts.length > 0) {\n          userPosts.forEach((post) => {\n            getCommentsCount(post.id.toString());\n          });\n        }\n      });\n      return () => unsubscribe();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        source={require(\"../../assets/image/photo-BG-2x.jpg\")}\n        style={styles.image}\n      >\n        <View style={styles.wrapper}>\n          <View style={styles.userInfo}>\n            <View style={styles.imgBox}>\n              <Image\n                style={styles.avatar}\n                source={require(\"../../assets/image/avatar.png\")}\n              />\n            </View>\n            <View style={styles.user}>\n              <Text style={styles.name}>{userName}</Text>\n            </View>\n          </View>\n          <View style={styles.postsList}>\n            <FlatList\n              data={userPosts}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <View>\n                  <Image source={{ uri: item.photo }} style={styles.post} />\n                  <View>\n                    <Text style={styles.title}>{item.comment}</Text>\n                  </View>\n                  <View style={styles.box}>\n                    <View style={styles.commentWrapper}>\n                      <TouchableOpacity\n                        onPress={() =>\n                          navigation.navigate(\"Комментарии\", {\n                            postId: item.id,\n                          })\n                        }\n                      >\n                        <FontAwesome name=\"comment\" size={24} color=\"#FF6C00\" />\n                      </TouchableOpacity>\n                      <Text style={styles.commentsCount}>\n                        {commentsCount[item.id] || 0}\n                      </Text>\n                    </View>\n\n                    <View style={styles.wrapperLocation}>\n                      <TouchableOpacity\n                        onPress={() =>\n                          navigation.navigate(\"MapScreen\", {\n                            location: item.location,\n                          })\n                        }\n                      >\n                        <Ionicons\n                          name=\"location-outline\"\n                          size={24}\n                          color=\"#BDBDBD\"\n                        />\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        onPress={() =>\n                          navigation.navigate(\"MapScreen\", {\n                            location: item.location,\n                          })\n                        }\n                      >\n                        <Text style={styles.locationName}>\n                          {item.locationName}\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              )}\n            />\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nexport default ProfileScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n  wrapper: {\n    marginTop: 250,\n    backgroundColor: \"#FFFFFF\",\n    paddingHorizontal: 16,\n\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n  },\n\n  userInfo: {\n    flexDirection: \"row\",\n    marginTop: 32,\n    height: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  imgBox: {\n    position: \"absolute\",\n    left: \"35%\",\n    top: \"-100%\",\n    width: 120,\n    height: 120,\n    backgroundColor: \"#E8E8E8\",\n    marginRight: 8,\n    borderRadius: 16,\n  },\n  avatar: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  name: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 30,\n    lineHeight: 35,\n    color: \"#212121\",\n  },\n  postsList: {\n    marginBottom: 120,\n  },\n  post: {\n    height: 240,\n    width: \"100%\",\n    borderRadius: 8,\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 32,\n  },\n\n  title: {\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n  },\n  commentWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  commentsCount: {\n    ntFamily: \"RobotoRegular\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    marginLeft: 9,\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  location: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n  },\n  locationName: {\n    marginLeft: 4,\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    textDecorationLine: \"underline\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}