{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Provider } from \"react-redux\";\nimport { StatusBar } from \"expo-status-bar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { store } from \"./redux/store\";\nimport { useCallback } from \"react\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport Main from \"./components/Main\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useFonts = useFonts({\n      RobotoRegular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n      RobotoMedium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n      RobotoBold: require(\"./assets/fonts/Roboto-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(_Fragment, {\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsxs(View, {\n        onLayout: onLayoutRootView,\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsx(Main, {})]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["Provider","StatusBar","View","StyleSheet","store","useCallback","useFonts","SplashScreen","Main","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","preventAutoHideAsync","App","_useFonts","RobotoRegular","require","RobotoMedium","RobotoBold","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","children","onLayout","style","styles","container","create","flex"],"sources":["/Users/ihor.masechko/Documents/goit-react-native/App.js"],"sourcesContent":["import { Provider } from \"react-redux\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { View, StyleSheet } from \"react-native\";\n\nimport { store } from \"./redux/store\";\n\nimport { useCallback } from \"react\";\n\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\n\nimport Main from \"./components/Main\";\n\nSplashScreen.preventAutoHideAsync();\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    RobotoRegular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    RobotoMedium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n    RobotoBold: require(\"./assets/fonts/Roboto-Bold.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <>\n      <Provider store={store}>\n        <View onLayout={onLayoutRootView} style={styles.container}>\n          <StatusBar style=\"auto\" />\n          <Main />\n        </View>\n      </Provider>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAI5C,SAASC,KAAK;AAEd,SAASC,WAAW,QAAQ,OAAO;AAEnC,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAElD,OAAOC,IAAI;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErCP,YAAY,CAACQ,oBAAoB,EAAE;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBX,QAAQ,CAAC;MAC7BY,aAAa,EAAEC,OAAO,qCAAqC;MAC3DC,YAAY,EAAED,OAAO,oCAAoC;MACzDE,UAAU,EAAEF,OAAO;IACrB,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAN,SAAA;IAJKO,WAAW,GAAAF,UAAA;EAMlB,IAAMG,gBAAgB,GAAGpB,WAAW,CAAAqB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMjB,YAAY,CAACoB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EACA,OACEd,IAAA,CAAAI,SAAA;IAAAc,QAAA,EACElB,IAAA,CAACV,QAAQ;MAACI,KAAK,EAAEA,KAAM;MAAAwB,QAAA,EACrBhB,KAAA,CAACV,IAAI;QAAC2B,QAAQ,EAAEJ,gBAAiB;QAACK,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAJ,QAAA,GACxDlB,IAAA,CAACT,SAAS;UAAC6B,KAAK,EAAC;QAAM,EAAG,EAC1BpB,IAAA,CAACF,IAAI,KAAG;MAAA;IACH;EACE,EACV;AAEP;AAEA,IAAMuB,MAAM,GAAG5B,UAAU,CAAC8B,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}