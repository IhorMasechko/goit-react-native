{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\nimport app from \"../../firebase/config\";\nimport { getFirestore, collection, onSnapshot, doc, query } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = getFirestore(app);\nvar PostsScreen = function PostsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    commentsCount = _useState4[0],\n    setCommentsCount = _useState4[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    userName = _useSelector.userName,\n    userEmail = _useSelector.userEmail;\n  useEffect(function () {\n    getAllPost();\n    posts.forEach(function (post) {\n      getCommentsCount(post.id);\n    });\n  }, []);\n  var getAllPost = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield onSnapshot(collection(db, \"posts\"), function (snapshots) {\n          setPosts(snapshots.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          }));\n        });\n      } catch (error) {\n        console.log(error.massage);\n        Alert.alert(\"Try again\");\n      }\n    });\n    return function getAllPost() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.commentsCount) {\n      setCommentsCount(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, route.params.postId, route.params.commentsCount));\n      });\n    }\n  }, [route.params]);\n  var getCommentsCount = function () {\n    var _ref3 = _asyncToGenerator(function* (postId) {\n      try {\n        var commentsRef = collection(db, \"posts/\" + postId + \"/comments\");\n        var queryRef = query(commentsRef);\n        var unsubscribe = onSnapshot(queryRef, function (querySnapshot) {\n          var commentsCount = querySnapshot.docs.length;\n          setCommentsCount(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, postId, commentsCount));\n          });\n        });\n        return function () {\n          return unsubscribe();\n        };\n      } catch (error) {\n        console.log(error);\n        setCommentsCount(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, postId, 0));\n        });\n      }\n    });\n    return function getCommentsCount(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.userInfo,\n      children: [_jsx(View, {\n        style: styles.imgBox,\n        children: _jsx(Image, {\n          style: styles.avatar,\n          source: require(\"../../assets/image/avatar.png\")\n        })\n      }), _jsxs(View, {\n        style: styles.user,\n        children: [_jsx(Text, {\n          style: styles.name,\n          children: userName\n        }), _jsx(Text, {\n          style: styles.email,\n          children: userEmail\n        })]\n      })]\n    }), _jsx(FlatList, {\n      data: posts,\n      keyExtractor: function keyExtractor(item, index) {\n        index.toString();\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          children: [_jsx(Image, {\n            source: {\n              uri: item.photo\n            },\n            style: styles.post\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.title,\n              children: item.comment\n            })\n          }), _jsxs(View, {\n            style: styles.box,\n            children: [_jsxs(View, {\n              style: styles.commentWrapper,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"Комментарии\", {\n                    postId: item.id,\n                    photo: item.photo\n                  });\n                },\n                children: _jsx(Feather, {\n                  name: \"message-circle\",\n                  size: 24,\n                  color: \"#BDBDBD\"\n                })\n              }), _jsx(Text, {\n                style: styles.commentsCount,\n                children: commentsCount[item.id] || 0\n              })]\n            }), _jsxs(View, {\n              style: styles.wrapperLocation,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"MapScreen\", {\n                    location: item.location\n                  });\n                },\n                children: _jsx(Ionicons, {\n                  name: \"location-outline\",\n                  size: 24,\n                  color: \"#BDBDBD\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"MapScreen\", {\n                    location: item.location\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.locationName,\n                  children: item.locationName\n                })\n              })]\n            })]\n          })]\n        });\n      }\n    })]\n  });\n};\nexport default PostsScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\",\n    paddingHorizontal: 15\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    marginTop: 32,\n    height: 60,\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  imgBox: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#E8E8E8\",\n    marginRight: 8\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 16\n  },\n  name: {\n    fontFamily: \"RobotoBold\",\n    fontStyle: \"normal\",\n    fontSize: 13,\n    lineHeight: 15,\n    color: \"#212121\"\n  },\n  email: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 11,\n    lineHeight: 13,\n    color: \"#212121\"\n  },\n  post: {\n    height: 240,\n    width: \"100%\",\n    borderRadius: 8\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  title: {\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\"\n  },\n  commentWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  commentsCount: {\n    ntFamily: \"RobotoRegular\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#BDBDBD\",\n    marginLeft: 9\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  location: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\"\n  },\n  locationName: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    textDecorationLine: \"underline\"\n  }\n});","map":{"version":3,"names":["useState","useEffect","useSelector","StyleSheet","View","Text","Image","FlatList","TouchableOpacity","Alert","Ionicons","Feather","app","getFirestore","collection","onSnapshot","doc","query","jsx","_jsx","jsxs","_jsxs","db","PostsScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","commentsCount","setCommentsCount","_useSelector","state","auth","userName","userEmail","getAllPost","forEach","post","getCommentsCount","id","_ref2","_asyncToGenerator","snapshots","docs","map","_objectSpread","data","error","console","log","massage","alert","apply","arguments","_route$params","params","prev","_defineProperty","postId","_ref3","commentsRef","queryRef","unsubscribe","querySnapshot","length","_x","style","styles","container","children","userInfo","imgBox","avatar","source","require","user","name","email","keyExtractor","item","index","toString","renderItem","_ref4","uri","photo","title","comment","box","commentWrapper","onPress","navigate","size","color","wrapperLocation","location","locationName","create","flex","backgroundColor","paddingHorizontal","flexDirection","marginTop","height","alignItems","marginBottom","width","marginRight","borderRadius","fontFamily","fontStyle","fontSize","lineHeight","display","justifyContent","ntFamily","marginLeft","textDecorationLine"],"sources":["/Users/ihor.masechko/Documents/goit-react-native/Screens/mainScreen/PostsScreen.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  FlatList,\n  TouchableOpacity,\n  Alert,\n} from \"react-native\";\n\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\n\nimport app from \"../../firebase/config\";\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  doc,\n  query,\n} from \"firebase/firestore\";\n\nconst db = getFirestore(app);\n\nconst PostsScreen = ({ navigation, route }) => {\n  const [posts, setPosts] = useState([]);\n  const [commentsCount, setCommentsCount] = useState({});\n\n  const { userName, userEmail } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    getAllPost();\n    posts.forEach((post) => {\n      getCommentsCount(post.id);\n    });\n  }, []);\n\n  const getAllPost = async () => {\n    try {\n      await onSnapshot(collection(db, \"posts\"), (snapshots) => {\n        setPosts(snapshots.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n      });\n    } catch (error) {\n      console.log(error.massage);\n      Alert.alert(\"Try again\");\n    }\n  };\n\n  useEffect(() => {\n    if (route.params?.commentsCount) {\n      setCommentsCount((prev) => ({\n        ...prev,\n        [route.params.postId]: route.params.commentsCount,\n      }));\n    }\n  }, [route.params]);\n\n  const getCommentsCount = async (postId) => {\n    try {\n      const commentsRef = collection(db, `posts/${postId}/comments`);\n      const queryRef = query(commentsRef);\n      const unsubscribe = onSnapshot(queryRef, (querySnapshot) => {\n        const commentsCount = querySnapshot.docs.length;\n        setCommentsCount((prev) => ({ ...prev, [postId]: commentsCount }));\n      });\n      return () => unsubscribe();\n    } catch (error) {\n      console.log(error);\n      setCommentsCount((prev) => ({ ...prev, [postId]: 0 }));\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.userInfo}>\n        <View style={styles.imgBox}>\n          <Image\n            style={styles.avatar}\n            source={require(\"../../assets/image/avatar.png\")}\n          />\n        </View>\n        <View style={styles.user}>\n          <Text style={styles.name}>{userName}</Text>\n          <Text style={styles.email}>{userEmail}</Text>\n        </View>\n      </View>\n      <FlatList\n        data={posts}\n        keyExtractor={(item, index) => {\n          index.toString();\n        }}\n        renderItem={({ item }) => (\n          <View>\n            <Image source={{ uri: item.photo }} style={styles.post} />\n\n            <View>\n              <Text style={styles.title}>{item.comment}</Text>\n            </View>\n\n            <View style={styles.box}>\n              <View style={styles.commentWrapper}>\n                <TouchableOpacity\n                  onPress={() =>\n                    navigation.navigate(\"Комментарии\", {\n                      postId: item.id,\n                      photo: item.photo,\n                    })\n                  }\n                >\n                  <Feather name=\"message-circle\" size={24} color=\"#BDBDBD\" />\n                </TouchableOpacity>\n                <Text style={styles.commentsCount}>\n                  {commentsCount[item.id] || 0}\n                </Text>\n              </View>\n\n              <View style={styles.wrapperLocation}>\n                <TouchableOpacity\n                  onPress={() =>\n                    navigation.navigate(\"MapScreen\", {\n                      location: item.location,\n                    })\n                  }\n                >\n                  <Ionicons name=\"location-outline\" size={24} color=\"#BDBDBD\" />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() =>\n                    navigation.navigate(\"MapScreen\", {\n                      location: item.location,\n                    })\n                  }\n                >\n                  <Text style={styles.locationName}>{item.locationName}</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default PostsScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\",\n    paddingHorizontal: 15,\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    marginTop: 32,\n    height: 60,\n    alignItems: \"center\",\n    marginBottom: 32,\n  },\n  imgBox: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#E8E8E8\",\n    marginRight: 8,\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 16,\n  },\n  name: {\n    fontFamily: \"RobotoBold\",\n    fontStyle: \"normal\",\n    fontSize: 13,\n    lineHeight: 15,\n    color: \"#212121\",\n  },\n  email: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 11,\n    lineHeight: 13,\n    color: \"#212121\",\n  },\n  post: {\n    height: 240,\n    width: \"100%\",\n    borderRadius: 8,\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 32,\n  },\n  title: {\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n  },\n  commentWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  commentsCount: {\n    ntFamily: \"RobotoRegular\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#BDBDBD\",\n    marginLeft: 9,\n\n    // borderColor: \"red\",\n    // borderWidth: 1,\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    // borderColor: \"red\",\n    // borderWidth: 1,\n  },\n  wrapperLocation: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  location: {\n    fontFamily: \"RobotoMedium\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n  },\n  locationName: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    fontSize: 16,\n    lineHeight: 19,\n    color: \"#212121\",\n    textDecorationLine: \"underline\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}