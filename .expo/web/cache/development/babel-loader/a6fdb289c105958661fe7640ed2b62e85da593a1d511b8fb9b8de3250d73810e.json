{"ast":null,"code":"import * as React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport RegistrationScreen from \"./Screens/auth/RegistrationScreen\";\nimport LoginScreen from \"./Screens/auth/LoginScreen\";\nimport Home from \"./Screens/mainScreen/Home\";\nimport CreatePostsScreen from \"./Screens/mainScreen/CreatePostsScreen\";\nimport ProfileScreen from \"./Screens/mainScreen/ProfileScreen\";\nimport { authSignOutUser } from \"./redux/auth/authOperations\";\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainStack = createStackNavigator();\nvar Tabs = createBottomTabNavigator();\nfunction MyBackButton() {\n  var navigation = useNavigation();\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    children: _jsx(Ionicons, {\n      name: \"arrow-back\",\n      size: 24,\n      color: \"#212121\"\n    })\n  });\n}\nvar useRoute = function useRoute(isAuth) {\n  var dispatch = useDispatch();\n  var signOut = function signOut() {\n    dispatch(authSignOutUser());\n  };\n  if (!isAuth) {\n    return _jsxs(MainStack.Navigator, {\n      initialRouteName: \"Registration\",\n      children: [_jsx(MainStack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(MainStack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    });\n  }\n  return _jsxs(Tabs.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarShowLabel: false,\n      tabBarShowIcon: true,\n      tabBarItemStyle: {\n        height: 40,\n        maxWidth: 70,\n        borderRadius: 20,\n        marginTop: 9,\n        marginRight: 15,\n        marginLeft: 15\n      },\n      tabBarActiveBackgroundColor: \"#FF6C00\",\n      tabBarActiveTintColor: \"#FFFFFF\",\n      tabBarInactiveBackgroundColor: \"#FFFFFF\",\n      tabBarStyle: {\n        paddingHorizontal: 15,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }\n    },\n    children: [_jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        title: \"Публикации\",\n        headerTitleStyle: {\n          fontSize: 17,\n          fontFamily: \"RobotoMedium\",\n          lineHeight: 22,\n          color: \"#212121\"\n        },\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused,\n            color = _ref.color,\n            size = _ref.size;\n          return _jsx(Feather, {\n            name: \"grid\",\n            size: 24,\n            color: focused ? \"#FFFFFF\" : \"#BDBDBD\",\n            style: {}\n          });\n        },\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            onPress: signOut,\n            children: _jsx(Feather, {\n              name: \"log-out\",\n              size: 24,\n              color: \"#BDBDBD\"\n            })\n          });\n        },\n        headerStyle: {\n          borderBottomColor: \"#E5E5E5\",\n          borderBottomWidth: 1\n        },\n        headerRightContainerStyle: {\n          paddingRight: 15\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u044E\",\n      component: CreatePostsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"add\",\n            size: 30,\n            color: focused ? \"#FFFFFF\" : \"#BDBDBD\"\n          });\n        },\n        headerLeft: function headerLeft() {\n          return MyBackButton();\n        },\n        headerStyle: {\n          borderBottomColor: \"#E5E5E5\",\n          borderBottomWidth: 1\n        },\n        headerLeftContainerStyle: {\n          paddingLeft: 15\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n      component: ProfileScreen,\n      options: {\n        title: false,\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            onPress: signOut,\n            children: _jsx(Feather, {\n              name: \"log-out\",\n              size: 24,\n              color: \"#BDBDBD\"\n            })\n          });\n        },\n        headerRightContainerStyle: {\n          paddingRight: 15\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n            color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Feather, {\n            name: \"user\",\n            size: 24,\n            color: !focused ? \"#BDBDBD\" : color\n          });\n        }\n      }\n    })]\n  });\n};\nexport default useRoute;","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","useNavigation","TouchableOpacity","Feather","Ionicons","RegistrationScreen","LoginScreen","Home","CreatePostsScreen","ProfileScreen","authSignOutUser","useDispatch","jsx","_jsx","jsxs","_jsxs","MainStack","Tabs","MyBackButton","navigation","onPress","goBack","children","name","size","color","useRoute","isAuth","dispatch","signOut","Navigator","initialRouteName","Screen","component","options","headerShown","screenOptions","tabBarShowLabel","tabBarShowIcon","tabBarItemStyle","height","maxWidth","borderRadius","marginTop","marginRight","marginLeft","tabBarActiveBackgroundColor","tabBarActiveTintColor","tabBarInactiveBackgroundColor","tabBarStyle","paddingHorizontal","justifyContent","alignItems","title","headerTitleStyle","fontSize","fontFamily","lineHeight","tabBarIcon","_ref","focused","style","headerRight","headerStyle","borderBottomColor","borderBottomWidth","headerRightContainerStyle","paddingRight","_ref2","headerLeft","headerLeftContainerStyle","paddingLeft","_ref3"],"sources":["/Users/ihor.masechko/Documents/goit-react-native/router.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { TouchableOpacity } from \"react-native\";\n\nimport { Feather } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport RegistrationScreen from \"./Screens/auth/RegistrationScreen\";\nimport LoginScreen from \"./Screens/auth/LoginScreen\";\nimport Home from \"./Screens/mainScreen/Home\";\nimport CreatePostsScreen from \"./Screens/mainScreen/CreatePostsScreen\";\nimport ProfileScreen from \"./Screens/mainScreen/ProfileScreen\";\n\nimport { authSignOutUser } from \"./redux/auth/authOperations\";\nimport { useDispatch } from \"react-redux\";\n\nconst MainStack = createStackNavigator();\nconst Tabs = createBottomTabNavigator();\n\nfunction MyBackButton() {\n  const navigation = useNavigation();\n  return (\n    <TouchableOpacity onPress={() => navigation.goBack()}>\n      <Ionicons name=\"arrow-back\" size={24} color=\"#212121\" />\n    </TouchableOpacity>\n  );\n}\n\n\nconst useRoute = (isAuth) => {\n  const dispatch = useDispatch();\n\n  const signOut = () => {\n    dispatch(authSignOutUser());\n  };\n\n  if (!isAuth) {\n    return (\n      <MainStack.Navigator initialRouteName=\"Registration\">\n        <MainStack.Screen\n          name=\"Registration\"\n          component={RegistrationScreen}\n          // options={{ headerShown: \"Registration\" }}\n          options={{ headerShown: false }}\n        />\n        <MainStack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n          options={{ headerShown: false }}\n        />\n      </MainStack.Navigator>\n    );\n  }\n  return (\n    \n\n    <Tabs.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarShowIcon: true,\n        tabBarItemStyle: {\n          height: 40,\n          maxWidth: 70,\n          borderRadius: 20,\n          marginTop: 9,\n          marginRight: 15,\n          marginLeft:15\n         \n        },\n        tabBarActiveBackgroundColor: \"#FF6C00\",\n        tabBarActiveTintColor: \"#FFFFFF\",\n        tabBarInactiveBackgroundColor: \"#FFFFFF\",\n\n        tabBarStyle: {\n          paddingHorizontal: 15,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <Tabs.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          title: \"Публикации\",\n          headerTitleStyle: {\n            fontSize: 17,\n            fontFamily: \"RobotoMedium\",\n            lineHeight: 22,\n            color: \"#212121\",\n          },\n          tabBarIcon: ({ focused, color, size }) => {\n            return (\n              <Feather\n                name=\"grid\"\n                size={24}\n                color={focused ? \"#FFFFFF\" : \"#BDBDBD\"}\n                style={\n                  {\n                    // marginRight:31,\n                    // paddingHorizontal: focused ? 20 : 0,\n                    // borderWidth: focused ? 1 : 0,\n                    // borderRadius: focused ? 16 : 0,\n                    // backgroundColor: focused ? \"#FF6C00\" : \"#FFFFFF\"\n                    // alignSelf: focused ? \"center\" : \"right\",\n                  }\n                }\n              />\n            );\n          },\n          headerRight: () => (\n            <TouchableOpacity onPress={signOut}>\n              <Feather name=\"log-out\" size={24} color=\"#BDBDBD\" />\n            </TouchableOpacity>\n          ),\n          headerStyle: {\n            borderBottomColor: \"#E5E5E5\",\n            borderBottomWidth: 1,\n          },\n          headerRightContainerStyle: {\n            paddingRight: 15,\n          },\n        }}\n        //   tabBarOptions={{\n        //   showLabel: true,\n        //   tabBarIconPosition: 'beside-label',\n        // }}\n      />\n\n      <Tabs.Screen\n        name=\"Создать публикацию\"\n        component={CreatePostsScreen}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => {\n            return (\n              <Ionicons\n                name=\"add\"\n                size={30}\n                color={focused ? \"#FFFFFF\" : \"#BDBDBD\"}\n              />\n            );\n          },\n\n          headerLeft: () => MyBackButton(),\n\n          headerStyle: {\n            borderBottomColor: \"#E5E5E5\",\n            borderBottomWidth: 1,\n          },\n          headerLeftContainerStyle: {\n            paddingLeft: 15,\n          },\n        }}\n      />\n      <Tabs.Screen\n        name=\"Профиль\"\n        component={ProfileScreen}\n        options={{\n          title: false,\n          headerRight: () => (\n            <TouchableOpacity onPress={signOut}>\n              <Feather name=\"log-out\" size={24} color=\"#BDBDBD\" />\n            </TouchableOpacity>\n          ),\n          headerRightContainerStyle: {\n            paddingRight: 15,\n          },\n\n          tabBarIcon: ({ focused, color, size }) => {\n            return (\n              <Feather\n                name=\"user\"\n                size={24}\n                color={!focused ? \"#BDBDBD\" : color}\n              />\n            );\n          },\n        }}\n      />\n    </Tabs.Navigator>\n  );\n};\n\nexport default useRoute;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}