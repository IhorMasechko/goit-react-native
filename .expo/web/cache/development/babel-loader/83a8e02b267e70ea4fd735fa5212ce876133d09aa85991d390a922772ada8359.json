{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport RegistrationScreen from \"./Screens/LoginScreen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      RobotoRegular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n      RobotoMedium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n      RobotoBold: require(\"./assets/fonts/Roboto-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    onLayout: onLayoutRootView,\n    style: styles.container,\n    children: [_jsx(RegistrationScreen, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","LoginScreen","RegistrationScreen","useFonts","useCallback","SplashScreen","jsx","_jsx","jsxs","_jsxs","App","_useFonts","RobotoRegular","require","RobotoMedium","RobotoBold","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","onLayout","style","styles","container","children","create","flex"],"sources":["/Users/ihor.masechko/Documents/goit-react-native/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View } from \"react-native\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport RegistrationScreen from \"./Screens/LoginScreen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    RobotoRegular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    RobotoMedium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n    RobotoBold: require(\"./assets/fonts/Roboto-Bold.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View onLayout={onLayoutRootView} style={styles.container}>\n      {/* `<LoginScreen />` */}\n      <RegistrationScreen />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,WAAW;AAClB,OAAOC,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBR,QAAQ,CAAC;MAC7BS,aAAa,EAAEC,OAAO,qCAAqC;MAC3DC,YAAY,EAAED,OAAO,oCAAoC;MACzDE,UAAU,EAAEF,OAAO;IACrB,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAN,SAAA;IAJKO,WAAW,GAAAF,UAAA;EAMlB,IAAMG,gBAAgB,GAAGf,WAAW,CAAAgB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMb,YAAY,CAACgB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EACA,OACET,KAAA,CAACT,IAAI;IAACsB,QAAQ,EAAEH,gBAAiB;IAACI,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAExDnB,IAAA,CAACL,kBAAkB,KAAG,EACtBK,IAAA,CAACT,SAAS;MAACyB,KAAK,EAAC;IAAM,EAAG;EAAA,EACrB;AAEX;AAEA,IAAMC,MAAM,GAAGzB,UAAU,CAAC4B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}